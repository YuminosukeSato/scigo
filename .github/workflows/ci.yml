name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  pull-requests: read

env:
  GO_VERSION: "1.25"
  GOPROXY: https://proxy.golang.org,direct

jobs:
  # Format and Lint check
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Go with cache
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
          cache-dependency-path: |
            go.sum
            **/go.sum

      - name: Install formatters
        run: |
          go install mvdan.cc/gofumpt@latest
          go install golang.org/x/tools/cmd/goimports@latest

      - name: Check gofumpt formatting
        run: |
          echo "Checking gofumpt formatting..."
          gofumpt -l -d .
          if [ -n "$(gofumpt -l .)" ]; then
            echo "❌ gofumpt formatting issues found. Run 'gofumpt -w .' locally"
            exit 1
          fi

      - name: Check goimports formatting
        run: |
          echo "Checking goimports formatting..."
          goimports -l -d -local github.com/YuminosukeSato/scigo .
          if [ -n "$(goimports -l -local github.com/YuminosukeSato/scigo .)" ]; then
            echo "❌ goimports formatting issues found. Run 'goimports -w -local github.com/YuminosukeSato/scigo .' locally"
            exit 1
          fi

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          args: --timeout=5m --new-from-rev=origin/${{ github.base_ref || 'main' }}
          skip-cache: false

      - name: Check go mod tidy
        run: |
          go mod tidy
          git diff --exit-code go.mod go.sum

  # Test runs
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Go with cache
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Run tests
        run: |
          go test -v -short -race -coverprofile=coverage.out ./...

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.out

  # Final status check
  ci-status:
    needs: [lint, test]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check CI Status
        run: |
          if [ "${{ needs.lint.result }}" != "success" ] || \
             [ "${{ needs.test.result }}" != "success" ]; then
            echo "CI failed"
            exit 1
          fi
          echo "✅ All CI checks passed!"
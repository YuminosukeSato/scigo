name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    strategy:
      matrix:
        go-version: [1.24.x, 1.23.x]
        platform: [ubuntu-latest, macos-latest]
    
    runs-on: ${{ matrix.platform }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
        cache: true
    
    - name: Check formatting and vet
      if: matrix.platform == 'ubuntu-latest' && matrix.go-version == '1.24.x'
      run: |
        gofmt -d .
        go vet ./...
    
    - name: Run basic linter (relaxed)
      if: matrix.platform == 'ubuntu-latest' && matrix.go-version == '1.24.x'
      run: go vet ./...
    
    - name: Check go mod tidy
      if: matrix.platform == 'ubuntu-latest' && matrix.go-version == '1.24.x'
      run: |
        go mod tidy
        git diff --exit-code go.mod go.sum || echo "go mod tidy made changes"

    - name: Test
      run: |
        go test -v ./...
    
    - name: Coverage
      if: matrix.platform == 'ubuntu-latest' && matrix.go-version == '1.24.x'
      run: |
        go test -race -coverprofile=coverage.out -covermode=atomic ./...
        go tool cover -func=coverage.out
    
    - name: Upload coverage
      if: matrix.platform == 'ubuntu-latest' && matrix.go-version == '1.24.x'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

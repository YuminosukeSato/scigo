name: Run checks

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read # to fetch code (actions/checkout)
  security-events: write # to upload security results to GitHub Security tab
  actions: read # for CodeQL analysis
  pull-requests: read # for semgrep analysis

env:
  # run static analysis only with the latest Go version
  LATEST_GO_VERSION: "1.24"

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.LATEST_GO_VERSION }}
          check-latest: true

      - name: Run go vet
        run: go vet ./...

      - name: Run staticcheck
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          staticcheck ./...

      - name: Run govulncheck
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...

      - name: Run gosec security scanner
        run: |
          go install github.com/securego/gosec/v2/cmd/gosec@latest
          gosec -fmt sarif -out gosec-report.sarif ./... || echo "gosec completed with issues"
          gosec -fmt json -out gosec-report.json ./... || echo "gosec completed with issues"
          gosec ./... || echo "gosec completed with issues"

      - name: Run semgrep security analysis
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/secrets
            p/golang
            p/owasp-top-ten
            p/cwe-top-25

      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: go
          queries: security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: Run nancy vulnerability scanner
        run: |
          go install github.com/sonatypeossindex/nancy@latest
          go list -json -deps ./... | nancy sleuth || echo "nancy completed with issues"

      - name: Scan for secrets with gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
        continue-on-error: true

      - name: Upload gosec results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always() && hashFiles('gosec-report.sarif') != ''
        with:
          sarif_file: gosec-report.sarif

      - name: Upload trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always() && hashFiles('trivy-results.sarif') != ''
        with:
          sarif_file: trivy-results.sarif

      - name: Upload security scan artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-scan-results
          path: |
            gosec-report.*
            trivy-results.*
          retention-days: 30
          if-no-files-found: warn

      - name: Run dependency check
        run: |
          go install github.com/sonatypeossindex/nancy@latest
          go mod download
          go list -json -deps ./... | nancy sleuth -loud || echo "nancy dependency check completed with issues"

      - name: Scan for hardcoded credentials
        run: |
          go install github.com/trufflesecurity/trufflehog/v3@latest
          trufflehog filesystem . --json || echo "trufflehog completed with findings"

      - name: Run tests
        run: go test -v ./...

      - name: Run tests with race detector
        run: go test -race ./...

      - name: Check go mod tidy
        run: |
          go mod tidy
          git diff --exit-code go.mod go.sum

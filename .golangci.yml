# .golangci.yml - Go 1.24対応
version: "2"

run:
  go: "1.24"
  timeout: 5m
  issues-exit-code: 1
  tests: true
  modules-download-mode: readonly
  skip-dirs:
    - vendor
    - testdata
    - examples/data
    - .git
  skip-files:
    - ".*\\.pb\\.go$"
    - ".*_generated\\.go$"

output:
  formats:
    text:
      path: stdout
  print-issued-lines: true
  print-linter-name: true
  uniq-by-line: true
  sort-results: true

linters:
  disable-all: true
  enable:
    # Core linters
    - errcheck
    - govet
    - ineffassign
    - staticcheck
    - unused
    
    # Style and formatting
    - misspell
    - whitespace
    - unconvert
    - unparam
    - wsl
    - nlreturn
    - nolintlint
    - goheader
    - godot
    - godox
    - grouper
    - importas
    - nilerr
    - nilnil
    - thelper
    - tparallel
    - revive
    - gomodguard
    - forbidigo
    - containedctx
    - contextcheck
    - decorder
    - depguard
    - dogsled
    - dupl
    - durationcheck
    - errname
    - errorlint
    - exhaustive
    - forcetypeassert
    - goconst
    - gocritic
    - gocyclo
    - maintidx
    
    # Complexity
    - funlen
    - nestif
    - gocognit
    - cyclop
    
    # Performance
    - prealloc
    - bodyclose
    - noctx
    
    # Security
    - gosec
    
    # Code quality
    - lll
    - nakedret
    - rowserrcheck
    - sqlclosecheck
    - wastedassign
    - predeclared
    - reassign
    - usestdlibvars
    - varnamelen

linters-settings:
  gocyclo:
    min-complexity: 15
  
  funlen:
    lines: 120
    statements: 60
  
  gocognit:
    min-complexity: 20
  
  errcheck:
    check-type-assertions: true
    check-blank: true
    ignore: fmt:.*,math/rand:.*
  
  unparam:
    check-exported: false
  
  gosec:
    excludes:
      - G101
      - G404
      - G107
  
  dupl:
    threshold: 150
  
  lll:
    line-length: 120
  
  goconst:
    min-len: 3
    min-occurrences: 3
    ignore-tests: true
  
  nestif:
    min-complexity: 6
  
  prealloc:
    simple: true
    range-loops: true
    for-loops: true
  
  gocritic:
    enabled-tags:
      - diagnostic
      - style
      - performance
      - experimental
      - opinionated
    disabled-checks:
      - commentedOutCode
      - whyNoLint
      - unnamedResult
      - hugeParam
      - rangeValCopy
  
  nilnil:
    checked-types:
      - ptr
      - func
      - iface
      - map
      - chan
  
  varnamelen:
    min-name-length: 2
    ignore-type-assert-ok: true
    ignore-map-index-ok: true
    ignore-chan-recv-ok: true
    ignore-decls:
      - c echo.Context
      - t testing.T
      - e error
      - i int
      - j int
      - k int
      - v interface{}
      - x float64
      - y float64
      - z float64

issues:
  max-issues-per-linter: 0
  max-same-issues: 0
  new: false
  exclude-use-default: false
  exclude-case-sensitive: false
  
  exclude-rules:
    - path: "sklearn/lightgbm.*\\.go"
      linters:
        - funlen
        - gocyclo
        - gocognit
        - nestif
        - dupl
    
    - path: "_test\\.go"
      linters:
        - funlen
        - gocyclo
        - dupl
        - lll
        - maintidx
        - varnamelen
        - goconst
    
    - path: "examples/.*\\.go"
      linters:
        - gocritic
        - errcheck
        - gosec
        - funlen
        - lll
        - revive
    
    - text: "should have a package comment"
      linters:
        - revive
    
    - text: "consider giving a name to these results"
      path: "sklearn/lightgbm.*\\.go"
      linters:
        - gocritic
  
  exclude:
    - "Error return value of .((os\\.)?std(out|err)\\..*|.*Close|.*Flush|os\\.Remove(All)?|.*print(f|ln)?|os\\.(Un)?Setenv). is not checked"
    - "G101: Potential hardcoded credentials"
    - "G204: Subprocess launched with function call as argument or cmd arguments"
    - "G304: File path provided as taint input"
    - "package-comments: should have a package comment"
    - "ST1003: should not use underscores in Go names"